service: rise-connections-service

frameworkVersion: ^2.50.0

plugins:
  localPath: "/usr/local/lib/node_modules/"
  modules:
    - serverless-prune-plugin
    - serverless-plugin-existing-s3
    - ./../../common/serverless/plugins/no-logs-group

custom:
  fromTerraform: ${file(../../common/serverless/sls_terraform_outputs.js)}
  filecounterTableName: file-counter-${opt:stage, self:provider.stage}
  middlewarestagingdata: middleware-staging-data-${opt:stage, self:provider.stage}
  tableName: rise-connections-${opt:stage, self:provider.stage}
  prune:
    automatic: true
    number: 1

provider:
  name: aws
  runtime: ${self:custom.fromTerraform.node_runtime}
  memorySize: 1024
  stage: ${opt:stage}
  region: ${self:custom.fromTerraform.region}
  stackName: sls-${self:service}-${opt:stage, self:provider.stage}-stack
  stackTags: ${self:custom.fromTerraform.common_tags}
  tags: ${self:custom.fromTerraform.common_tags}
  deploymentBucket: ${self:custom.fromTerraform.application_bucketname}
  iam:
    role: ${self:custom.fromTerraform.mentorship_lambda_iam}  
  
  apiGateway:
    restApiId: ${self:custom.fromTerraform.mentorship_rest_api_id}
    restApiRootResourceId: ${self:custom.fromTerraform.mentorship_rest_api_root_resource_id}  
  vpc:
    securityGroupIds:
      - ${self:custom.fromTerraform.mentorship_sg}
    subnetIds:
      - ${self:custom.fromTerraform.subnet_private_0}
      - ${self:custom.fromTerraform.subnet_private_1}
  logs:
    restApi: "${self:custom.fromTerraform.mentorship_rest_api_id}"
    frameworkLambda: false
  environment:
    ${file(./configs/providers/${self:provider.name}/${opt:stage, self:provider.stage}/env.yml)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - SNS:Publish
        - SNS:RemovePermission
        - SNS:SetTopicAttributes
        - SNS:ListSubscriptionsByTopic
        - SNS:GetTopicAttributes
        - SNS:Receive
        - SNS:AddPermission
        - SNS:Subscribe
       
      Resource:
        #- "arn:aws:dynamodb:${self:custom.fromTerraform.region, 'eu-west-1'}:${self:custom.fromTerraform.middleware_aws_account_id, '0'}:table/${self:custom.filecounterTableName}"  
        #- "arn:aws:dynamodb:${self:custom.fromTerraform.middleware_region, 'eu-west-1'}:${self:custom.fromTerraform.middleware_aws_account_id, '0'}:table/${self:custom.tableName}"
        #- "arn:aws:dynamodb:${self:custom.fromTerraform.middleware_region, 'eu-west-1'}:${self:custom.fromTerraform.middleware_aws_account_id, '0'}:table/${self:custom.middlewarestagingdata}"
        - "*"
        #- "arn:aws:sns:${self:custom.fromTerraform.middleware_region, 'eu-west-1'}:${self:custom.fromTerraform.middleware_aws_account_id, '0'}:${opt:stage, self:provider.stage}-eif-audit-topic"

functions: ${file(./configs/functions/functions.yml)}



resources:
  - ${file(./configs/resources/log-group-and-subscription.yml)}
  - ${file(./configs/resources/rise-connection.yml)}
