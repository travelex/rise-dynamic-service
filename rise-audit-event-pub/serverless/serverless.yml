service: eif-audit-event-pub

plugins:
  localPath: '/usr/local/lib/node_modules/'
  modules:
    - serverless-prune-plugin
    - serverless-plugin-existing-s3
    - ./../../common/serverless/plugins/no-logs-group

custom:
  fromTerraform: ${file(../../common/serverless/sls_terraform_outputs.js)}
  
  prune:
    automatic: true
    number: 1

provider:
  name: aws
  runtime: ${self:custom.fromTerraform.node_runtime}
  stage: ${opt:stage}
  region: ${self:custom.fromTerraform.middleware_region}
  stackName: sls-${self:service}-${opt:stage, self:provider.stage}-stack
  stackTags: ${self:custom.fromTerraform.middleware_common_tags}
  tags: ${self:custom.fromTerraform.middleware_common_tags}
  role: ${self:custom.fromTerraform.middleware_lambda_iam_role_arn}
  deploymentBucket:
    name: ${self:custom.fromTerraform.middleware_deployment_bucket_name}
  environment:
    ${file(./configs/providers/${self:provider.name}/${opt:stage, self:provider.stage}/env.yml)}
  vpc:
    securityGroupIds:
      - ${self:custom.fromTerraform.middleware_lambda_security_group_id}
    subnetIds: ${self:custom.fromTerraform.aws_subnet_ids}
  logs:
    restApi: "${self:custom.fromTerraform.middleware_private_api_gateway_logs_enabled}"
  iamManagedPolicies: ${self:custom.fromTerraform.middleware_lambda_iam_execution_vpc_policy_arns}


functions:
  ${file(./configs/functions/functions.yml)}

resources:
  ${file(./configs/resources/sns-topic.yml)}
