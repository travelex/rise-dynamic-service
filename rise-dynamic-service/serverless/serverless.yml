service: rise-dynamic-service
#variablesResolutionMode: 20210326


plugins:
  localPath: "/usr/local/lib/node_modules/"
  modules:
    - serverless-prune-plugin    
    - serverless-plugin-existing-s3
    - serverless-offline 

custom:
  # fromTerraform: ${file(../../common/serverless/sls_terraform_outputs.js)}
  prune:
    automatic: true
    number: 1

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 512
  region: eu-west-1 #${self:custom.fromTerraform.region}
  stage: ${opt:stage}
  stackName: sls-${self:provider.stage}-${self:service}-stack
  # stackTags: ${self:custom.fromTerraform.pe_common_tags}
  # lambdaHashingVersion: "20201221"
  # environment: ${file(./configs/providers/${self:provider.name}/${opt:stage}/env.yml)}
  # deploymentBucket: ${self:custom.fromTerraform.application_bucketname}
  # iam:
  #   role: ${self:custom.fromTerraform.risk_compliance_lambda_execution_role}      
  # vpc:
  #   securityGroupIds:
  #     - ${self:custom.fromTerraform.risk_compliance_lambda_sg_id}
  #   subnetIds:
  #     - ${self:custom.fromTerraform.subnet_private_0}
  #     - ${self:custom.fromTerraform.subnet_private_1}
  # apiGateway:
  #   restApiId: ${self:custom.fromTerraform.risk_compliance_rest_api_id}
  #   restApiRootResourceId: ${self:custom.fromTerraform.risk_compliance_rest_api_root_resource_id}

functions: 
  - ${file(./configs/functions/rise-service.yml)}


# resources:
#   - ${file(./configs/resources/log-group-and-subscription.yml)}